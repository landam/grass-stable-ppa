Description: Fix 'paramter' & 'paramater' typos, replace with 'parameter'.
Author: Bas Couwenberg <sebastic@xs4all.nl>

--- a/imagery/i.eb.eta/i.eb.eta.html
+++ b/imagery/i.eb.eta/i.eb.eta.html
@@ -29,7 +29,7 @@ Full ETa processing will need those:
 <h2>REFERENCES</h2>
 
 <p>[1] Bastiaanssen, W.G.M., 1995.
-Estimation of Land surface paramters by remote sensing under clear-sky
+Estimation of Land surface parameters by remote sensing under clear-sky
 conditions. PhD thesis, Wageningen University, Wageningen, The Netherlands.
 (<a href="http://edepot.wur.nl/206553">PDF</a>)
 
--- a/imagery/i.eb.evapfr/i.eb.evapfr.html
+++ b/imagery/i.eb.evapfr/i.eb.evapfr.html
@@ -18,7 +18,7 @@ Makin, Molden and Bastiaanssen (2001).
 <h2>REFERENCES</h2>
 
 <p>[1] Bastiaanssen, W.G.M., 1995.
-Estimation of Land surface paramters by remote sensing under clear-sky
+Estimation of Land surface parameters by remote sensing under clear-sky
 conditions. PhD thesis, Wageningen University, Wageningen, The Netherlands.
 (<a href="http://edepot.wur.nl/206553">PDF</a>)
 
--- a/imagery/i.eb.hsebal01/i.eb.hsebal01.html
+++ b/imagery/i.eb.hsebal01/i.eb.hsebal01.html
@@ -43,7 +43,7 @@ in this code in [3].
 <h2>REFERENCES</h2>
 
 <p>[1] Bastiaanssen, W.G.M., 1995.
-  Estimation of Land surface paramters by remote sensing under clear-sky
+  Estimation of Land surface parameters by remote sensing under clear-sky
 conditions. PhD thesis, Wageningen University, Wageningen, The Netherlands.
 (<a href="http://edepot.wur.nl/206553">PDF</a>)
 
--- a/imagery/i.ortho.photo/README
+++ b/imagery/i.ortho.photo/README
@@ -75,7 +75,7 @@ The following GRASS 6 directories contai
 				parameters
 
 	./photo.2target:	computes photo to target location
-				transformation paramters
+				transformation parameters
 
 	./photo.rectify:	does the actual image rectification
 	
--- a/lib/python/pygrass/modules/interface/module.py
+++ b/lib/python/pygrass/modules/interface/module.py
@@ -557,7 +557,7 @@ class Module(object):
         self.__call__.__func__.__doc__ = self.__doc__
 
     def __call__(self, *args, **kargs):
-        """Set module paramters to the class and, if run_ is True execute the
+        """Set module parameters to the class and, if run_ is True execute the
         module, therefore valid parameters are all the module parameters
         plus some extra parameters that are: run_, stdin_, stdout_, stderr_,
         env_ and finish_.
--- a/lib/python/temporal/temporal_operator.py
+++ b/lib/python/temporal/temporal_operator.py
@@ -253,7 +253,7 @@ class TemporalOperatorParser(object):
     def parse(self, expression,  optype = 'relation'):
         self.optype = optype        
         self.parser.parse(expression)
-        # The paramter optype can be of type: select {:, during, r}, boolean{&&, contains, |}, 
+        # The parameter optype can be of type: select {:, during, r}, boolean{&&, contains, |}, 
         #                                                            raster{*, equal, |}, vector {|, starts, &},
         #                                                            hash{#, during, l} or relation {during}.
     
--- a/gui/wxpython/lmgr/frame.py
+++ b/gui/wxpython/lmgr/frame.py
@@ -754,7 +754,7 @@ class GMFrame(wx.Frame):
         except:
             layer = None
 
-        if layer and len(cmdlist) == 1: # only if no paramaters given
+        if layer and len(cmdlist) == 1: # only if no parameters given
             if (type == 'raster' and cmdlist[0][0] == 'r' and cmdlist[0][1] != '3') or \
                     (type == 'vector' and cmdlist[0][0] == 'v'):
                 input = GUI().GetCommandInputMapParamKey(cmdlist[0])
--- a/lib/gmath/la.c
+++ b/lib/gmath/la.c
@@ -98,7 +98,7 @@ int G_matrix_zero(mat_struct * A)
 /*!
  * \fn int G_matrix_set(mat_struct *A, int rows, int cols, int ldim)
  *
- * \brief Set paramaters for an initialized matrix
+ * \brief Set parameters for an initialized matrix
  *
  * Set parameters for matrix <b>A</b> that is allocated,
  * but not yet fully initialized.  Is an alternative to G_matrix_init().
--- a/lib/init/grass7.html
+++ b/lib/init/grass7.html
@@ -243,7 +243,7 @@ examples bellow) otherwise taken from th
 
 <dt><b>grass70 -c EPSG:5514:3 $HOME/grassdata/mylocation</b>
 <dd> Creates new GRASS location with EPSG code 5514 (S-JTSK / Krovak
-    East North - SJTSK) with datum transformation paramaters used in
+    East North - SJTSK) with datum transformation parameters used in
     Czech Republic in the specified GISDBASE
 
 <dt><b>grass70 -c myvector.shp $HOME/grassdata/mylocation</b>
--- a/lib/python/pygrass/vector/table.py
+++ b/lib/python/pygrass/vector/table.py
@@ -1090,7 +1090,7 @@ class Table(object):
         """Insert a new row
 
         :param values: a tuple of values to insert, it is possible to insert
-                       more rows using a list of tuple and paramater `many`
+                       more rows using a list of tuple and parameter `many`
         :type values: tuple
         :param cursor: the cursor to connect, if None it use the cursor
                        of connection table object
--- a/lib/python/script/task.py
+++ b/lib/python/script/task.py
@@ -245,7 +245,7 @@ class grassTask:
         return {'flags': self.flags, 'params': self.params}
 
     def has_required(self):
-        """Check if command has at least one required paramater
+        """Check if command has at least one required parameter
         """
         for p in self.params:
             if p.get('required', False):
--- a/raster/r.volume/main.c
+++ b/raster/r.volume/main.c
@@ -68,7 +68,7 @@ int main(int argc, char *argv[])
         struct Flag *report;
     } flag;
 
-    /* define paramaters and flags */
+    /* define parameters and flags */
     G_gisinit(argv[0]);
 
     module = G_define_module();
--- a/raster/r.what/r.what.html
+++ b/raster/r.what/r.what.html
@@ -7,7 +7,7 @@ eastings and northings); the user can al
 with each location.
 
 <p>The input coordinates can be entered directly on the command line
-via <b>coordinates</b> paramater, or redirected via <tt>stdin</tt>
+via <b>coordinates</b> parameter, or redirected via <tt>stdin</tt>
 from an input text file, script, or piped from another program
 (like <em><a href="v.out.ascii.html">v.out.ascii</a></em>). Coordinates
 can be given also as a vector points map (<b>points</b>).
