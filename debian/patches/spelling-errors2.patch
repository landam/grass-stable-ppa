Description: Fix spelling errors.
 futher      -> further
 hierachical -> hierarchical
 refered     -> referred
 substract   ->esubtract
Author: Bas Couwenberg <sebastic@debian.org>
Forwarded: https://trac.osgeo.org/grass/ticket/3088
Applied-Upstream: https://trac.osgeo.org/grass/changeset/68822

--- a/display/d.vect.thematic/d.vect.thematic.html
+++ b/display/d.vect.thematic/d.vect.thematic.html
@@ -24,7 +24,7 @@ via <em><a href="g.extension.html">g.ext
 
 The <b>-l</b> flag instructs the module to print legend information
 (<i>class min | class max | number of observations in class |
-color</i>) to standard output for futher use in graphical software.
+color</i>) to standard output for further use in graphical software.
 When combined with the <b>-e</b> flag, the legend information will
 be extended with some additional statistical information. If the
 <b>-n</b> flag is set, the module will only print the legend 
--- a/imagery/i.segment/i.segment.html
+++ b/imagery/i.segment/i.segment.html
@@ -1,6 +1,6 @@
 <h2>DESCRIPTION</h2>
 Image segmentation or object recognition is the process of grouping 
-similar pixels into unique segments, also refered to as objects. 
+similar pixels into unique segments, also referred to as objects. 
 Boundary and region based algorithms are described in the literature, 
 currently a region growing and merging algorithm is implemented. Each 
 object found during the segmentation process is given a unique ID and 
@@ -46,7 +46,7 @@ of 0 would allow only identical valued p
 threshold of 1 would allow everything to be merged. Initial empirical 
 tests indicate threshold values of 0.01 to 0.05 are reasonable values 
 to start. It is recommended to start with a low value, e.g. 0.01, and 
-then perform hierachical segmentation by using the output of the last 
+then perform hierarchical segmentation by using the output of the last 
 run as <b>seeds</b> for the next run.
 
 <h4>Calculation Formulas</h4>
--- a/lib/vector/dglib/BUGS
+++ b/lib/vector/dglib/BUGS
@@ -1,4 +1,4 @@
-Do not change bug numbers, these numbers are refered in Vlib/net.c
+Do not change bug numbers, these numbers are referred in Vlib/net.c
 
 BUG1 (24.2.2003):
 Cache for SP does not work properly. For examle:
--- a/vector/vectorintro.html
+++ b/vector/vectorintro.html
@@ -67,7 +67,7 @@ topological GIS this border exists once
 areas.  Topological representation of vector data helps to produce and
 maintain vector maps with clean geometry as well as enables certain
 analyses that can not be conducted with non-topological or spaghetti
-data. In GRASS, topological data are refered to as level 2 data and
+data. In GRASS, topological data are referred to as level 2 data and
 spaghetti data is referred to as level 1.
 <p>
 Sometimes topology is not necessary and the additional memory and
--- a/include/iostream/embuffer.h
+++ b/include/iostream/embuffer.h
@@ -232,7 +232,7 @@ private:
   //stream_len() on the stream, but it is more costly esp in the case
   //when streams are on disk and must be moved in and out just to find
   //stream length; streamsize is set only at stream creation, and the
-  //actual size must substract the number of iteme deleted from the
+  //actual size must subtract the number of iteme deleted from the
   //bos
   unsigned long* streamsize;
   
--- a/lib/gmath/blas_level_3.c
+++ b/lib/gmath/blas_level_3.c
@@ -32,7 +32,7 @@
  *
  * In case B == NULL, matrix A will be scaled by scalar a. \n
  * In case a == 1.0, a simple matrix addition is performed. \n
- * In case a == -1.0 matrix A is substracted from matrix B. \n
+ * In case a == -1.0 matrix A is subtracted from matrix B. \n
  * The result is written into matrix C. 
  *
  *
@@ -93,7 +93,7 @@ void G_math_d_aA_B(double **A, double **
  *
  * In case B == NULL, matrix A will be scaled by scalar a. \n
  * In case a == 1.0, a simple matrix addition is performed. \n
- * In case a == -1.0 matrix A is substracted from matrix B. \n
+ * In case a == -1.0 matrix A is subtracted from matrix B. \n
  * The result is written into matrix C. 
  *
  *
--- a/lib/vector/Vlib/area.c
+++ b/lib/vector/Vlib/area.c
@@ -397,7 +397,7 @@ double Vect_get_area_area(const struct M
     Vect_line_prune(Points);
     size = G_area_of_polygon(Points->x, Points->y, Points->n_points);
 
-    /* substracting island areas */
+    /* subtracting island areas */
     for (i = 0; i < Area->n_isles; i++) {
 	Vect_get_isle_points(Map, Area->isles[i], Points);
 	Vect_line_prune(Points);
--- a/lib/vector/vectorlib_topology.dox
+++ b/lib/vector/vectorlib_topology.dox
@@ -400,7 +400,7 @@ A1,A2+A3 = 2 isles
 In GRASS, whenever an 'inner' ring does not touch the boundary of an
 outside area, also not in one point, it is an 'inner' ring (isle). The
 areas A2 and A3 form a single isle I1 located within area A1. The size
-of isle I1 is substracted from the size of area A1 when calculating
+of isle I1 is subtracted from the size of area A1 when calculating
 the size of area A1. Any centroids falling into isle I1 are excluded
 when searching for a centroid that can be attached to area A1. A1
 above can be exported from GRASS as polygon A1 with inner ring I1.
--- a/raster/r.out.pov/r.out.pov.html
+++ b/raster/r.out.pov/r.out.pov.html
@@ -5,7 +5,7 @@ height-field file for POVray (tga==name)
 value is either 0 or 1) specifies the height-field type. When the user
 enters 0 the output will be actual heights. If entered 1 the cell-values
 will be normalized. If hftype is 0 (actual heights) the bias==value can
-be used to add or substract a value from heights. Use scale==value to scale
+be used to add or subtract a value from heights. Use scale==value to scale
 your heights by value. The GRASS program r.out.pov can be used to create
 height- field files for Persistence of Vision (POV) raytracer. POV can
 use a height-field defined in Targa (.TGA) image file format where the
