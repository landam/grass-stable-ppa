Description: Fix spelling errors.
 directoy        -> directory
 maximimum       -> maximum
 ommited         -> omitted
 whith           -> with
 contraints      -> constraints
 allow to create -> allow creation
Author: Bas Couwenberg <sebastic@debian.org>
Forwarded: https://trac.osgeo.org/grass/ticket/3138

--- a/temporal/t.rast.out.vtk/t.rast.out.vtk.html
+++ b/temporal/t.rast.out.vtk/t.rast.out.vtk.html
@@ -10,7 +10,7 @@ ParaView. The VTK legacy files are creat
 In this simple example we create several raster maps with random values 
 and one elevation map. The random value raster maps are registered in a 
 space time raster dataset. All maps of this space time raster dataset 
-are exported using <b>t.rast.out.vtk</b> into the directoy 
+are exported using <b>t.rast.out.vtk</b> into the directory 
 <b>/tmp/test1</b>.
 
 
--- a/vector/v.net.flow/v.net.flow.html
+++ b/vector/v.net.flow/v.net.flow.html
@@ -5,10 +5,10 @@ between two sets of nodes.
 
 <h2>NOTES</h2>
 The two sets of nodes are called <em>sources</em> and <em>sink</em> 
-and <em>v.net.flow</em> finds the maximimum flow from the former to 
+and <em>v.net.flow</em> finds the maximum flow from the former to 
 the latter ones. Edge capacities can be specified by <b>arc_column</b> 
 for forward direction and <b>arc_backward_column</b> for backward direction. If 
-the latter parameter is ommited then the same capacity is used in 
+the latter parameter is omitted then the same capacity is used in 
 either direction. The sets are given by the respective <b>cats</b>, 
 <b>layer</b> and <b>where</b> parameters. Maximum flow corresponds 
 to the maximum amount of water possibly flowing through the network 
--- a/lib/raster/get_row.c
+++ b/lib/raster/get_row.c
@@ -426,7 +426,7 @@ static void gdal_values_double(int fd, c
    finally the values in work_buf are converted into 
    type Y and put into 'cell'.
    if type X == type Y the intermediate step of storing the values in 
-   work_buf might be ommited. check the appropriate function for XY to
+   work_buf might be omitted. check the appropriate function for XY to
    determine the procedure of conversion. 
  */
 static void transfer_to_cell_XX(int fd, void *cell)
--- a/raster/r.out.gdal/main.c
+++ b/raster/r.out.gdal/main.c
@@ -254,7 +254,7 @@ int main(int argc, char *argv[])
     mapset = G_find_raster2(input->answer, "");
 
     if (mapset != NULL) {
-	/* Add input to "group". "Group" whith 1 raster (band) will exist only in memory. */
+	/* Add input to "group". "Group" with 1 raster (band) will exist only in memory. */
 	I_init_group_ref(&ref);
 	I_add_file_to_group_ref(input->answer, mapset, &ref);
     }
--- a/vector/v.net.visibility/v.net.visibility.html
+++ b/vector/v.net.visibility/v.net.visibility.html
@@ -21,7 +21,7 @@ or <em><a href="d.path.html">d.path</a><
 If you compute a shortest path after computing the visibility graph
 you will notice that this path might go through a vertex of a line. If
 this is not what you wanted you might need to process the map
-in <em><a href="v.buffer.html">v.buffer</a></em>, initially whith a
+in <em><a href="v.buffer.html">v.buffer</a></em>, initially with a
 small value. Example:
 
 <div class="code"><pre>
--- a/vector/v.random/v.random.html
+++ b/vector/v.random/v.random.html
@@ -158,7 +158,7 @@ Random points only sampled in forested a
 </center>
 
 
-<h3>Stratified random sampling: Random sampling from vector map with spatial contraints</h3>
+<h3>Stratified random sampling: Random sampling from vector map with spatial constraints</h3>
 
 Generating n points for each individual area: in this example two random
 points in each water body:
--- a/vector/v.buffer/v.buffer.html
+++ b/vector/v.buffer/v.buffer.html
@@ -133,7 +133,7 @@ v.buffer input=lakes output=lakes_buffer
 <img src="v_buffer_areas_int.png" border="1"><br>
 Internal buffer of 50m inside the "lakes" polygons (map subset, original areas
 shown in black) <br>
-Not all features are buffered, only the polygons that allow to create inside
+Not all features are buffered, only the polygons that allow creation inside
 a topological cleaned polygon.
 </center>
 
