Description: Fix 'informations' typo, replace with 'information'.
Author: Bas Couwenberg <sebastic@xs4all.nl>
Forwarded: http://trac.osgeo.org/grass/ticket/2560

--- a/lib/python/docs/src/temporal_framework.rst
+++ b/lib/python/docs/src/temporal_framework.rst
@@ -52,7 +52,7 @@ the SQL object serialization, all classe
 :mod:`~temporal.base`
 """""""""""""""""""""
 
-    Implements of basic dataset informations and SQL conversion of such information:
+    Implements of basic dataset information and SQL conversion of such information:
 
     - Definition of the SQL serialize class :class:`~temporal.base.DictSQLSerializer` 
       that converts the content of temporal
@@ -60,7 +60,7 @@ the SQL object serialization, all classe
     - Definition of :class:`~temporal.base.SQLDatabaseInterface` 
       that is the base class for all temporal datatype subclasses
     - Contains classes for all datasets [#allds]_ that contain
-      basic informations (id, name, mapset, creator, ...)
+      basic information (id, name, mapset, creator, ...)
 
 :mod:`~temporal.spatial_extent`
 """""""""""""""""""""""""""""""
@@ -101,7 +101,7 @@ the SQL object serialization, all classe
 :mod:`~temporal.c_libraries_interface`
 """"""""""""""""""""""""""""""""""""""
 
-    The RPC C-library interface for exit safe and fast access to raster, vector and 3D raster informations.
+    The RPC C-library interface for exit safe and fast access to raster, vector and 3D raster information.
 
 :mod:`~temporal.temporal_granularity`
 """""""""""""""""""""""""""""""""""""
@@ -133,14 +133,14 @@ temporal processing algorithms and tempo
 
     - Implements the base class for all datasets [#allds]_ :class:`~temporal.abstract_dataset.AbstractDataset`.
     - Implements the the select, insert and update functionality as well as
-      convenient functions to access the base, extent and metadata informations
+      convenient functions to access the base, extent and metadata information
 
 :mod:`~temporal.abstract_map_dataset`
 """""""""""""""""""""""""""""""""""""
 
     - Implements the base class :class:`~temporal.abstract_map_dataset.AbstractMapDataset` 
       for all map layer specific classes
-    - Provides the interface to all map layer specific informations in the temporal database
+    - Provides the interface to all map layer specific information in the temporal database
 
 :mod:`~temporal.abstract_space_time_dataset`
 """"""""""""""""""""""""""""""""""""""""""""
@@ -149,7 +149,7 @@ temporal processing algorithms and tempo
       for all Space Time Datasets classes
     - Contains the creation and deletion functionality, the map registration and un-registration,
       access methods to map layer objects and so on
-    - Provides the interface to all Space Time Dataset specific informations in the temporal database
+    - Provides the interface to all Space Time Dataset specific information in the temporal database
 
 :mod:`~temporal.space_time_datasets`
 """"""""""""""""""""""""""""""""""""
@@ -295,11 +295,11 @@ to access its registered maps.
     # Fill the object with the content from the temporal database
     strds.select(dbif=dbif)
 
-    # Print informations about the space time raster dataset to stdout
+    # Print information about the space time raster dataset to stdout
     strds.print_info()
 
     # Get all maps that are registered in the strds and print
-    # informations about the maps to stdout
+    # information about the maps to stdout
     maps = strds.get_registered_maps_as_objects(dbif=dbif)
 
     # We iterate over the temporal sorted map list
--- a/lib/python/temporal/abstract_space_time_dataset.py
+++ b/lib/python/temporal/abstract_space_time_dataset.py
@@ -1309,7 +1309,7 @@ class AbstractSpaceTimeDataset(AbstractD
                                                             order="start_time",
                                                             dbif=None):
         """Return all or a subset of the registered maps as ordered object
-           list with spatio-temporal topological relationship informations.
+           list with spatio-temporal topological relationship information.
 
            The objects are initialized with their id's' and the spatio-temporal
            extent (temporal type, start time, end time, west, east, south,
--- a/lib/python/temporal/core.py
+++ b/lib/python/temporal/core.py
@@ -216,7 +216,7 @@ def get_enable_timestamp_write():
 
        ..warning::
 
-           Be aware that C-libraries can not access timestamp informations if
+           Be aware that C-libraries can not access timestamp information if
            they are not written as spatial database metadata, hence modules
            that make use of timestamps using the C-library interface will not
            work with maps that were created without writing the timestamps.
--- a/lib/temporal/lib/map_list.c
+++ b/lib/temporal/lib/map_list.c
@@ -112,9 +112,9 @@ void tgis_map_list_add(tgisMapList *list
 }
 
 /** 
- * \brief Insert map informations into tgisMapList
+ * \brief Insert map information into tgisMapList
  *
- * This function alocates a tgisMap, fills it with the provided informations
+ * This function alocates a tgisMap, fills it with the provided information
  * and adds it to the list.
  * In case allocation fails, G_fatal_error() will be invoked by the
  * allocation function.
--- a/locale/grass_po_stats.py
+++ b/locale/grass_po_stats.py
@@ -1,11 +1,11 @@
 #!/usr/bin/env python
 #############################################################################
 #
-# MODULE:       Languages informations and statistics (Python)
+# MODULE:       Languages information and statistics (Python)
 # AUTHOR(S):    Luca Delucchi <lucadeluge@gmail.com>
 #               Pietro Zambelli <peter.zamb@gmail.com>
 # PURPOSE:      Create a json file containing languages translations
-#               informations and statistics.
+#               information and statistics.
 # COPYRIGHT:    (C) 2012 by the GRASS Development Team
 #
 #               This program is free software under the GNU General
@@ -88,7 +88,7 @@ def get_stats(languages, directory):
     # TO DO TOTALS OF ENGLISH WORD FOR EACH FILE
     # all the total string in english
     output['totals'] = {}
-    # all the informations about each lang
+    # all the information about each lang
     output['langs'] = {}
     # for each language
     for lang, pofilelist in languages.iteritems():
--- a/temporal/t.info/t.info.html
+++ b/temporal/t.info/t.info.html
@@ -1,18 +1,18 @@
 <h2>DESCRIPTION</h2>
 
-<em>t.info</em> reports informations about any dataset that is
+<em>t.info</em> reports information about any dataset that is
 registered in the temporal database in human readable or shell script
 style. Datasets are raster, 3D raster and vector maps as well as their
 corresponding space time datasets (STRDS, STR3DS and STVDS). This
-module reports the informations that are stored in the temporal
-database. These are basic informations (id, name, mapset, creator,
+module reports the information that are stored in the temporal
+database. These are basic information (id, name, mapset, creator,
 creation time, temporal type), the temporal and spatial extent and
 dataset type specific metadata. The user has to utilize <em>r.info</em>,
-<em>r3.info</em>, <em>v.info</em> to report detailed informations about
+<em>r3.info</em>, <em>v.info</em> to report detailed information about
 raster, 3D raster and vector maps, since not all map specific
-informations and metadata are stored in the temporal database.
+information and metadata are stored in the temporal database.
 <p>
-In addition, informations about the chosen temporal database backend
+In addition, information about the chosen temporal database backend
 can be reported.
 
 <h2>EXAMPLES</h2>
--- a/temporal/t.rast.colors/t.rast.colors.html
+++ b/temporal/t.rast.colors/t.rast.colors.html
@@ -10,7 +10,7 @@ Internally a file with map names is crea
 to the <em>file</em> option of <em>r.colors</em>.
 <p>
 Please have a look at the <a href="r.colors.html">r.colors</a>
-manual page for further informations.
+manual page for further information.
 
 <h2>EXAMPLE</h2>
 
--- a/temporal/temporalintro.html
+++ b/temporal/temporalintro.html
@@ -30,7 +30,7 @@ New space time datasets are created in t
 <a href="t.create.html">t.create</a>. The name of the new dataset, the
 type (strds, str3ds, stvds), the title and the description must be
 provided for creation. Optional the temporal type (absolute, relative)
-and semantic informations can be provided. 
+and semantic information can be provided. 
 <p>
 The module <a href="t.remove.html">t.remove</a> will remove the space time datasets
 from the temporal database. Use  <a href="t.support.html">t.support</a>
@@ -48,7 +48,7 @@ in an input file. The module supports th
 With  <a href="t.unregister.html">t.unregister</a> maps can be unregistered
 from space time datasets and the temporal database.
 <p>
-To print informations about space time datasets or registered maps, the
+To print information about space time datasets or registered maps, the
 module  <a href="t.info.html">t.info</a> can be used.
 <a href="t.list.html">t.list</a> will list all space time datasets and
 registered maps in the temporal database. 
--- a/vector/v.lrs/MAIL
+++ b/vector/v.lrs/MAIL
@@ -74,7 +74,7 @@ is to change always all mileposts.
 I don't have any documentation, as we use it only here. I have to write 
 something, but I don't have much time, let me know if you are interested.
 For now briefly:
-All the LRS is stored in one table, each record stores informations
+All the LRS is stored in one table, each record stores information
 about one segment between two mileposts:
  rsid        | integer | id of LRS segment (not so important)
  lcat        | integer | line id, unique id of the line
