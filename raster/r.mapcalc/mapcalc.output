Grammar

    0 $accept: program $end

    1 program: defs

    2 defs: def
    3     | def ';'
    4     | def ';' defs
    5     | error ';' defs

    6 def: STRING '=' exp
    7    | NAME '=' exp
    8    | atom_func

    9 map: STRING
   10    | NAME
   11    | name '@' name

   12 mapmod: '@'
   13       | 'r'
   14       | 'g'
   15       | 'b'
   16       | '#'
   17       | 'y'
   18       | 'i'

   19 index: INTEGER
   20      | '-' INTEGER

   21 expr_list: exp
   22          | exp ',' expr_list

   23 atom_var: VARSTRING
   24         | VARNAME

   25 atom_map: map '[' index ']'
   26         | map '[' index ',' index ']'
   27         | map '[' index ',' index ',' index ']'
   28         | map
   29         | mapmod map '[' index ']'
   30         | mapmod map '[' index ',' index ']'
   31         | mapmod map '[' index ',' index ',' index ']'
   32         | mapmod map

   33 atom_func: name '(' ')'
   34          | name '(' expr_list ')'

   35 exp_atom: '(' exp ')'
   36         | atom_var
   37         | atom_map
   38         | atom_func
   39         | INTEGER
   40         | FLOAT
   41         | DOUBLE

   42 exp_pre: exp_atom
   43        | '-' exp_atom
   44        | '~' exp_atom
   45        | '!' exp_atom

   46 exp_pow: exp_pre
   47        | exp_pre '^' exp_pow

   48 exp_mul: exp_pow
   49        | exp_mul '*' exp_pow
   50        | exp_mul '/' exp_pow
   51        | exp_mul '%' exp_pow

   52 exp_add: exp_mul
   53        | exp_add '+' exp_mul
   54        | exp_add '-' exp_mul

   55 exp_sh: exp_add
   56       | exp_sh LSH exp_add
   57       | exp_sh RSH exp_add
   58       | exp_sh RSHU exp_add

   59 exp_cmp: exp_sh
   60        | exp_cmp GT exp_sh
   61        | exp_cmp GE exp_sh
   62        | exp_cmp LT exp_sh
   63        | exp_cmp LE exp_sh

   64 exp_eq: exp_cmp
   65       | exp_eq EQ exp_cmp
   66       | exp_eq NE exp_cmp

   67 exp_bitand: exp_eq
   68           | exp_bitand BITAND exp_eq

   69 exp_bitor: exp_bitand
   70          | exp_bitor BITOR exp_bitand

   71 exp_logand: exp_bitor
   72           | exp_logand LOGAND exp_bitor
   73           | exp_logand LOGAND2 exp_bitor

   74 exp_logor: exp_logand
   75          | exp_logor LOGOR exp_logand
   76          | exp_logor LOGOR2 exp_logand

   77 exp_cond: exp_logor
   78         | exp_logor '?' exp_cond ':' exp_cond

   79 exp_let: exp_cond
   80        | name '=' exp_let

   81 exp: exp_let

   82 name: NAME
   83     | VARNAME


Terminals, with rules where they appear

$end (0) 0
'!' (33) 45
'#' (35) 16
'%' (37) 51
'(' (40) 33 34 35
')' (41) 33 34 35
'*' (42) 49
'+' (43) 53
',' (44) 22 26 27 30 31
'-' (45) 20 43 54
'/' (47) 50
':' (58) 78
';' (59) 3 4 5
'=' (61) 6 7 80
'?' (63) 78
'@' (64) 11 12
'[' (91) 25 26 27 29 30 31
']' (93) 25 26 27 29 30 31
'^' (94) 47
'b' (98) 15
'g' (103) 14
'i' (105) 18
'r' (114) 13
'y' (121) 17
'~' (126) 44
error (256) 5
VARNAME (258) 24 83
NAME (259) 7 10 82
VARSTRING (260) 23
STRING (261) 6 9
INTEGER (262) 19 20 39
FLOAT (263) 40
DOUBLE (264) 41
GT (265) 60
GE (266) 61
LT (267) 62
LE (268) 63
EQ (269) 65
NE (270) 66
LOGAND (271) 72
LOGOR (272) 75
LOGAND2 (273) 73
LOGOR2 (274) 76
BITAND (275) 68
BITOR (276) 70
LSH (277) 56
RSH (278) 57
RSHU (279) 58


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
defs (51)
    on left: 2 3 4 5, on right: 1 4 5
def (52)
    on left: 6 7 8, on right: 2 3 4
map (53)
    on left: 9 10 11, on right: 25 26 27 28 29 30 31 32
mapmod (54)
    on left: 12 13 14 15 16 17 18, on right: 29 30 31 32
index (55)
    on left: 19 20, on right: 25 26 27 29 30 31
expr_list (56)
    on left: 21 22, on right: 22 34
atom_var (57)
    on left: 23 24, on right: 36
atom_map (58)
    on left: 25 26 27 28 29 30 31 32, on right: 37
atom_func (59)
    on left: 33 34, on right: 8 38
exp_atom (60)
    on left: 35 36 37 38 39 40 41, on right: 42 43 44 45
exp_pre (61)
    on left: 42 43 44 45, on right: 46 47
exp_pow (62)
    on left: 46 47, on right: 47 48 49 50 51
exp_mul (63)
    on left: 48 49 50 51, on right: 49 50 51 52 53 54
exp_add (64)
    on left: 52 53 54, on right: 53 54 55 56 57 58
exp_sh (65)
    on left: 55 56 57 58, on right: 56 57 58 59 60 61 62 63
exp_cmp (66)
    on left: 59 60 61 62 63, on right: 60 61 62 63 64 65 66
exp_eq (67)
    on left: 64 65 66, on right: 65 66 67 68
exp_bitand (68)
    on left: 67 68, on right: 68 69 70
exp_bitor (69)
    on left: 69 70, on right: 70 71 72 73
exp_logand (70)
    on left: 71 72 73, on right: 72 73 74 75 76
exp_logor (71)
    on left: 74 75 76, on right: 75 76 77 78
exp_cond (72)
    on left: 77 78, on right: 78 79
exp_let (73)
    on left: 79 80, on right: 80 81
exp (74)
    on left: 81, on right: 6 7 21 22 35
name (75)
    on left: 82 83, on right: 11 33 34 80


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    VARNAME  shift, and go to state 2
    NAME     shift, and go to state 3
    STRING   shift, and go to state 4

    program    go to state 5
    defs       go to state 6
    def        go to state 7
    atom_func  go to state 8
    name       go to state 9


State 1

    5 defs: error . ';' defs

    ';'  shift, and go to state 10


State 2

   83 name: VARNAME .

    $default  reduce using rule 83 (name)


State 3

    7 def: NAME . '=' exp
   82 name: NAME .

    '='  shift, and go to state 11

    $default  reduce using rule 82 (name)


State 4

    6 def: STRING . '=' exp

    '='  shift, and go to state 12


State 5

    0 $accept: program . $end

    $end  shift, and go to state 13


State 6

    1 program: defs .

    $default  reduce using rule 1 (program)


State 7

    2 defs: def .
    3     | def . ';'
    4     | def . ';' defs

    ';'  shift, and go to state 14

    $default  reduce using rule 2 (defs)


State 8

    8 def: atom_func .

    $default  reduce using rule 8 (def)


State 9

   33 atom_func: name . '(' ')'
   34          | name . '(' expr_list ')'

    '('  shift, and go to state 15


State 10

    5 defs: error ';' . defs

    error    shift, and go to state 1
    VARNAME  shift, and go to state 2
    NAME     shift, and go to state 3
    STRING   shift, and go to state 4

    defs       go to state 16
    def        go to state 7
    atom_func  go to state 8
    name       go to state 9


State 11

    7 def: NAME '=' . exp

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 53
    exp         go to state 54
    name        go to state 55


State 12

    6 def: STRING '=' . exp

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 53
    exp         go to state 56
    name        go to state 55


State 13

    0 $accept: program $end .

    $default  accept


State 14

    3 defs: def ';' .
    4     | def ';' . defs

    error    shift, and go to state 1
    VARNAME  shift, and go to state 2
    NAME     shift, and go to state 3
    STRING   shift, and go to state 4

    $end  reduce using rule 3 (defs)

    defs       go to state 57
    def        go to state 7
    atom_func  go to state 8
    name       go to state 9


State 15

   33 atom_func: name '(' . ')'
   34          | name '(' . expr_list ')'

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    ')'        shift, and go to state 58
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    expr_list   go to state 59
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 53
    exp         go to state 60
    name        go to state 55


State 16

    5 defs: error ';' defs .

    $default  reduce using rule 5 (defs)


State 17

   24 atom_var: VARNAME .
   83 name: VARNAME .

    '='       reduce using rule 83 (name)
    '@'       reduce using rule 83 (name)
    '('       reduce using rule 83 (name)
    $default  reduce using rule 24 (atom_var)


State 18

   10 map: NAME .
   82 name: NAME .

    '='       reduce using rule 82 (name)
    '@'       reduce using rule 82 (name)
    '('       reduce using rule 82 (name)
    $default  reduce using rule 10 (map)


State 19

   23 atom_var: VARSTRING .

    $default  reduce using rule 23 (atom_var)


State 20

    9 map: STRING .

    $default  reduce using rule 9 (map)


State 21

   39 exp_atom: INTEGER .

    $default  reduce using rule 39 (exp_atom)


State 22

   40 exp_atom: FLOAT .

    $default  reduce using rule 40 (exp_atom)


State 23

   41 exp_atom: DOUBLE .

    $default  reduce using rule 41 (exp_atom)


State 24

   12 mapmod: '@' .

    $default  reduce using rule 12 (mapmod)


State 25

   13 mapmod: 'r' .

    $default  reduce using rule 13 (mapmod)


State 26

   14 mapmod: 'g' .

    $default  reduce using rule 14 (mapmod)


State 27

   15 mapmod: 'b' .

    $default  reduce using rule 15 (mapmod)


State 28

   16 mapmod: '#' .

    $default  reduce using rule 16 (mapmod)


State 29

   17 mapmod: 'y' .

    $default  reduce using rule 17 (mapmod)


State 30

   18 mapmod: 'i' .

    $default  reduce using rule 18 (mapmod)


State 31

   43 exp_pre: '-' . exp_atom

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '('        shift, and go to state 32

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 61
    name       go to state 62


State 32

   35 exp_atom: '(' . exp ')'

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 53
    exp         go to state 63
    name        go to state 55


State 33

   44 exp_pre: '~' . exp_atom

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '('        shift, and go to state 32

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 64
    name       go to state 62


State 34

   45 exp_pre: '!' . exp_atom

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '('        shift, and go to state 32

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 65
    name       go to state 62


State 35

   25 atom_map: map . '[' index ']'
   26         | map . '[' index ',' index ']'
   27         | map . '[' index ',' index ',' index ']'
   28         | map .

    '['  shift, and go to state 66

    $default  reduce using rule 28 (atom_map)


State 36

   29 atom_map: mapmod . map '[' index ']'
   30         | mapmod . map '[' index ',' index ']'
   31         | mapmod . map '[' index ',' index ',' index ']'
   32         | mapmod . map

    VARNAME  shift, and go to state 2
    NAME     shift, and go to state 18
    STRING   shift, and go to state 20

    map   go to state 67
    name  go to state 68


State 37

   36 exp_atom: atom_var .

    $default  reduce using rule 36 (exp_atom)


State 38

   37 exp_atom: atom_map .

    $default  reduce using rule 37 (exp_atom)


State 39

   38 exp_atom: atom_func .

    $default  reduce using rule 38 (exp_atom)


State 40

   42 exp_pre: exp_atom .

    $default  reduce using rule 42 (exp_pre)


State 41

   46 exp_pow: exp_pre .
   47        | exp_pre . '^' exp_pow

    '^'  shift, and go to state 69

    $default  reduce using rule 46 (exp_pow)


State 42

   48 exp_mul: exp_pow .

    $default  reduce using rule 48 (exp_mul)


State 43

   49 exp_mul: exp_mul . '*' exp_pow
   50        | exp_mul . '/' exp_pow
   51        | exp_mul . '%' exp_pow
   52 exp_add: exp_mul .

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 52 (exp_add)


State 44

   53 exp_add: exp_add . '+' exp_mul
   54        | exp_add . '-' exp_mul
   55 exp_sh: exp_add .

    '-'  shift, and go to state 73
    '+'  shift, and go to state 74

    $default  reduce using rule 55 (exp_sh)


State 45

   56 exp_sh: exp_sh . LSH exp_add
   57       | exp_sh . RSH exp_add
   58       | exp_sh . RSHU exp_add
   59 exp_cmp: exp_sh .

    LSH   shift, and go to state 75
    RSH   shift, and go to state 76
    RSHU  shift, and go to state 77

    $default  reduce using rule 59 (exp_cmp)


State 46

   60 exp_cmp: exp_cmp . GT exp_sh
   61        | exp_cmp . GE exp_sh
   62        | exp_cmp . LT exp_sh
   63        | exp_cmp . LE exp_sh
   64 exp_eq: exp_cmp .

    GT  shift, and go to state 78
    GE  shift, and go to state 79
    LT  shift, and go to state 80
    LE  shift, and go to state 81

    $default  reduce using rule 64 (exp_eq)


State 47

   65 exp_eq: exp_eq . EQ exp_cmp
   66       | exp_eq . NE exp_cmp
   67 exp_bitand: exp_eq .

    EQ  shift, and go to state 82
    NE  shift, and go to state 83

    $default  reduce using rule 67 (exp_bitand)


State 48

   68 exp_bitand: exp_bitand . BITAND exp_eq
   69 exp_bitor: exp_bitand .

    BITAND  shift, and go to state 84

    $default  reduce using rule 69 (exp_bitor)


State 49

   70 exp_bitor: exp_bitor . BITOR exp_bitand
   71 exp_logand: exp_bitor .

    BITOR  shift, and go to state 85

    $default  reduce using rule 71 (exp_logand)


State 50

   72 exp_logand: exp_logand . LOGAND exp_bitor
   73           | exp_logand . LOGAND2 exp_bitor
   74 exp_logor: exp_logand .

    LOGAND   shift, and go to state 86
    LOGAND2  shift, and go to state 87

    $default  reduce using rule 74 (exp_logor)


State 51

   75 exp_logor: exp_logor . LOGOR exp_logand
   76          | exp_logor . LOGOR2 exp_logand
   77 exp_cond: exp_logor .
   78         | exp_logor . '?' exp_cond ':' exp_cond

    LOGOR   shift, and go to state 88
    LOGOR2  shift, and go to state 89
    '?'     shift, and go to state 90

    $default  reduce using rule 77 (exp_cond)


State 52

   79 exp_let: exp_cond .

    $default  reduce using rule 79 (exp_let)


State 53

   81 exp: exp_let .

    $default  reduce using rule 81 (exp)


State 54

    7 def: NAME '=' exp .

    $default  reduce using rule 7 (def)


State 55

   11 map: name . '@' name
   33 atom_func: name . '(' ')'
   34          | name . '(' expr_list ')'
   80 exp_let: name . '=' exp_let

    '='  shift, and go to state 91
    '@'  shift, and go to state 92
    '('  shift, and go to state 15


State 56

    6 def: STRING '=' exp .

    $default  reduce using rule 6 (def)


State 57

    4 defs: def ';' defs .

    $default  reduce using rule 4 (defs)


State 58

   33 atom_func: name '(' ')' .

    $default  reduce using rule 33 (atom_func)


State 59

   34 atom_func: name '(' expr_list . ')'

    ')'  shift, and go to state 93


State 60

   21 expr_list: exp .
   22          | exp . ',' expr_list

    ','  shift, and go to state 94

    $default  reduce using rule 21 (expr_list)


State 61

   43 exp_pre: '-' exp_atom .

    $default  reduce using rule 43 (exp_pre)


State 62

   11 map: name . '@' name
   33 atom_func: name . '(' ')'
   34          | name . '(' expr_list ')'

    '@'  shift, and go to state 92
    '('  shift, and go to state 15


State 63

   35 exp_atom: '(' exp . ')'

    ')'  shift, and go to state 95


State 64

   44 exp_pre: '~' exp_atom .

    $default  reduce using rule 44 (exp_pre)


State 65

   45 exp_pre: '!' exp_atom .

    $default  reduce using rule 45 (exp_pre)


State 66

   25 atom_map: map '[' . index ']'
   26         | map '[' . index ',' index ']'
   27         | map '[' . index ',' index ',' index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 98


State 67

   29 atom_map: mapmod map . '[' index ']'
   30         | mapmod map . '[' index ',' index ']'
   31         | mapmod map . '[' index ',' index ',' index ']'
   32         | mapmod map .

    '['  shift, and go to state 99

    $default  reduce using rule 32 (atom_map)


State 68

   11 map: name . '@' name

    '@'  shift, and go to state 92


State 69

   47 exp_pow: exp_pre '^' . exp_pow

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 100
    name       go to state 62


State 70

   49 exp_mul: exp_mul '*' . exp_pow

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 101
    name       go to state 62


State 71

   50 exp_mul: exp_mul '/' . exp_pow

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 102
    name       go to state 62


State 72

   51 exp_mul: exp_mul '%' . exp_pow

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 103
    name       go to state 62


State 73

   54 exp_add: exp_add '-' . exp_mul

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 104
    name       go to state 62


State 74

   53 exp_add: exp_add '+' . exp_mul

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 105
    name       go to state 62


State 75

   56 exp_sh: exp_sh LSH . exp_add

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 106
    name       go to state 62


State 76

   57 exp_sh: exp_sh RSH . exp_add

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 107
    name       go to state 62


State 77

   58 exp_sh: exp_sh RSHU . exp_add

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 108
    name       go to state 62


State 78

   60 exp_cmp: exp_cmp GT . exp_sh

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 109
    name       go to state 62


State 79

   61 exp_cmp: exp_cmp GE . exp_sh

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 110
    name       go to state 62


State 80

   62 exp_cmp: exp_cmp LT . exp_sh

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 111
    name       go to state 62


State 81

   63 exp_cmp: exp_cmp LE . exp_sh

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 112
    name       go to state 62


State 82

   65 exp_eq: exp_eq EQ . exp_cmp

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 45
    exp_cmp    go to state 113
    name       go to state 62


State 83

   66 exp_eq: exp_eq NE . exp_cmp

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 45
    exp_cmp    go to state 114
    name       go to state 62


State 84

   68 exp_bitand: exp_bitand BITAND . exp_eq

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map        go to state 35
    mapmod     go to state 36
    atom_var   go to state 37
    atom_map   go to state 38
    atom_func  go to state 39
    exp_atom   go to state 40
    exp_pre    go to state 41
    exp_pow    go to state 42
    exp_mul    go to state 43
    exp_add    go to state 44
    exp_sh     go to state 45
    exp_cmp    go to state 46
    exp_eq     go to state 115
    name       go to state 62


State 85

   70 exp_bitor: exp_bitor BITOR . exp_bitand

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 116
    name        go to state 62


State 86

   72 exp_logand: exp_logand LOGAND . exp_bitor

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 117
    name        go to state 62


State 87

   73 exp_logand: exp_logand LOGAND2 . exp_bitor

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 118
    name        go to state 62


State 88

   75 exp_logor: exp_logor LOGOR . exp_logand

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 119
    name        go to state 62


State 89

   76 exp_logor: exp_logor LOGOR2 . exp_logand

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 120
    name        go to state 62


State 90

   78 exp_cond: exp_logor '?' . exp_cond ':' exp_cond

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 121
    name        go to state 62


State 91

   80 exp_let: name '=' . exp_let

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 122
    name        go to state 55


State 92

   11 map: name '@' . name

    VARNAME  shift, and go to state 2
    NAME     shift, and go to state 123

    name  go to state 124


State 93

   34 atom_func: name '(' expr_list ')' .

    $default  reduce using rule 34 (atom_func)


State 94

   22 expr_list: exp ',' . expr_list

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    expr_list   go to state 125
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 52
    exp_let     go to state 53
    exp         go to state 60
    name        go to state 55


State 95

   35 exp_atom: '(' exp ')' .

    $default  reduce using rule 35 (exp_atom)


State 96

   19 index: INTEGER .

    $default  reduce using rule 19 (index)


State 97

   20 index: '-' . INTEGER

    INTEGER  shift, and go to state 126


State 98

   25 atom_map: map '[' index . ']'
   26         | map '[' index . ',' index ']'
   27         | map '[' index . ',' index ',' index ']'

    ','  shift, and go to state 127
    ']'  shift, and go to state 128


State 99

   29 atom_map: mapmod map '[' . index ']'
   30         | mapmod map '[' . index ',' index ']'
   31         | mapmod map '[' . index ',' index ',' index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 129


State 100

   47 exp_pow: exp_pre '^' exp_pow .

    $default  reduce using rule 47 (exp_pow)


State 101

   49 exp_mul: exp_mul '*' exp_pow .

    $default  reduce using rule 49 (exp_mul)


State 102

   50 exp_mul: exp_mul '/' exp_pow .

    $default  reduce using rule 50 (exp_mul)


State 103

   51 exp_mul: exp_mul '%' exp_pow .

    $default  reduce using rule 51 (exp_mul)


State 104

   49 exp_mul: exp_mul . '*' exp_pow
   50        | exp_mul . '/' exp_pow
   51        | exp_mul . '%' exp_pow
   54 exp_add: exp_add '-' exp_mul .

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 54 (exp_add)


State 105

   49 exp_mul: exp_mul . '*' exp_pow
   50        | exp_mul . '/' exp_pow
   51        | exp_mul . '%' exp_pow
   53 exp_add: exp_add '+' exp_mul .

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 53 (exp_add)


State 106

   53 exp_add: exp_add . '+' exp_mul
   54        | exp_add . '-' exp_mul
   56 exp_sh: exp_sh LSH exp_add .

    '-'  shift, and go to state 73
    '+'  shift, and go to state 74

    $default  reduce using rule 56 (exp_sh)


State 107

   53 exp_add: exp_add . '+' exp_mul
   54        | exp_add . '-' exp_mul
   57 exp_sh: exp_sh RSH exp_add .

    '-'  shift, and go to state 73
    '+'  shift, and go to state 74

    $default  reduce using rule 57 (exp_sh)


State 108

   53 exp_add: exp_add . '+' exp_mul
   54        | exp_add . '-' exp_mul
   58 exp_sh: exp_sh RSHU exp_add .

    '-'  shift, and go to state 73
    '+'  shift, and go to state 74

    $default  reduce using rule 58 (exp_sh)


State 109

   56 exp_sh: exp_sh . LSH exp_add
   57       | exp_sh . RSH exp_add
   58       | exp_sh . RSHU exp_add
   60 exp_cmp: exp_cmp GT exp_sh .

    LSH   shift, and go to state 75
    RSH   shift, and go to state 76
    RSHU  shift, and go to state 77

    $default  reduce using rule 60 (exp_cmp)


State 110

   56 exp_sh: exp_sh . LSH exp_add
   57       | exp_sh . RSH exp_add
   58       | exp_sh . RSHU exp_add
   61 exp_cmp: exp_cmp GE exp_sh .

    LSH   shift, and go to state 75
    RSH   shift, and go to state 76
    RSHU  shift, and go to state 77

    $default  reduce using rule 61 (exp_cmp)


State 111

   56 exp_sh: exp_sh . LSH exp_add
   57       | exp_sh . RSH exp_add
   58       | exp_sh . RSHU exp_add
   62 exp_cmp: exp_cmp LT exp_sh .

    LSH   shift, and go to state 75
    RSH   shift, and go to state 76
    RSHU  shift, and go to state 77

    $default  reduce using rule 62 (exp_cmp)


State 112

   56 exp_sh: exp_sh . LSH exp_add
   57       | exp_sh . RSH exp_add
   58       | exp_sh . RSHU exp_add
   63 exp_cmp: exp_cmp LE exp_sh .

    LSH   shift, and go to state 75
    RSH   shift, and go to state 76
    RSHU  shift, and go to state 77

    $default  reduce using rule 63 (exp_cmp)


State 113

   60 exp_cmp: exp_cmp . GT exp_sh
   61        | exp_cmp . GE exp_sh
   62        | exp_cmp . LT exp_sh
   63        | exp_cmp . LE exp_sh
   65 exp_eq: exp_eq EQ exp_cmp .

    GT  shift, and go to state 78
    GE  shift, and go to state 79
    LT  shift, and go to state 80
    LE  shift, and go to state 81

    $default  reduce using rule 65 (exp_eq)


State 114

   60 exp_cmp: exp_cmp . GT exp_sh
   61        | exp_cmp . GE exp_sh
   62        | exp_cmp . LT exp_sh
   63        | exp_cmp . LE exp_sh
   66 exp_eq: exp_eq NE exp_cmp .

    GT  shift, and go to state 78
    GE  shift, and go to state 79
    LT  shift, and go to state 80
    LE  shift, and go to state 81

    $default  reduce using rule 66 (exp_eq)


State 115

   65 exp_eq: exp_eq . EQ exp_cmp
   66       | exp_eq . NE exp_cmp
   68 exp_bitand: exp_bitand BITAND exp_eq .

    EQ  shift, and go to state 82
    NE  shift, and go to state 83

    $default  reduce using rule 68 (exp_bitand)


State 116

   68 exp_bitand: exp_bitand . BITAND exp_eq
   70 exp_bitor: exp_bitor BITOR exp_bitand .

    BITAND  shift, and go to state 84

    $default  reduce using rule 70 (exp_bitor)


State 117

   70 exp_bitor: exp_bitor . BITOR exp_bitand
   72 exp_logand: exp_logand LOGAND exp_bitor .

    BITOR  shift, and go to state 85

    $default  reduce using rule 72 (exp_logand)


State 118

   70 exp_bitor: exp_bitor . BITOR exp_bitand
   73 exp_logand: exp_logand LOGAND2 exp_bitor .

    BITOR  shift, and go to state 85

    $default  reduce using rule 73 (exp_logand)


State 119

   72 exp_logand: exp_logand . LOGAND exp_bitor
   73           | exp_logand . LOGAND2 exp_bitor
   75 exp_logor: exp_logor LOGOR exp_logand .

    LOGAND   shift, and go to state 86
    LOGAND2  shift, and go to state 87

    $default  reduce using rule 75 (exp_logor)


State 120

   72 exp_logand: exp_logand . LOGAND exp_bitor
   73           | exp_logand . LOGAND2 exp_bitor
   76 exp_logor: exp_logor LOGOR2 exp_logand .

    LOGAND   shift, and go to state 86
    LOGAND2  shift, and go to state 87

    $default  reduce using rule 76 (exp_logor)


State 121

   78 exp_cond: exp_logor '?' exp_cond . ':' exp_cond

    ':'  shift, and go to state 130


State 122

   80 exp_let: name '=' exp_let .

    $default  reduce using rule 80 (exp_let)


State 123

   82 name: NAME .

    $default  reduce using rule 82 (name)


State 124

   11 map: name '@' name .

    $default  reduce using rule 11 (map)


State 125

   22 expr_list: exp ',' expr_list .

    $default  reduce using rule 22 (expr_list)


State 126

   20 index: '-' INTEGER .

    $default  reduce using rule 20 (index)


State 127

   26 atom_map: map '[' index ',' . index ']'
   27         | map '[' index ',' . index ',' index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 131


State 128

   25 atom_map: map '[' index ']' .

    $default  reduce using rule 25 (atom_map)


State 129

   29 atom_map: mapmod map '[' index . ']'
   30         | mapmod map '[' index . ',' index ']'
   31         | mapmod map '[' index . ',' index ',' index ']'

    ','  shift, and go to state 132
    ']'  shift, and go to state 133


State 130

   78 exp_cond: exp_logor '?' exp_cond ':' . exp_cond

    VARNAME    shift, and go to state 17
    NAME       shift, and go to state 18
    VARSTRING  shift, and go to state 19
    STRING     shift, and go to state 20
    INTEGER    shift, and go to state 21
    FLOAT      shift, and go to state 22
    DOUBLE     shift, and go to state 23
    '@'        shift, and go to state 24
    'r'        shift, and go to state 25
    'g'        shift, and go to state 26
    'b'        shift, and go to state 27
    '#'        shift, and go to state 28
    'y'        shift, and go to state 29
    'i'        shift, and go to state 30
    '-'        shift, and go to state 31
    '('        shift, and go to state 32
    '~'        shift, and go to state 33
    '!'        shift, and go to state 34

    map         go to state 35
    mapmod      go to state 36
    atom_var    go to state 37
    atom_map    go to state 38
    atom_func   go to state 39
    exp_atom    go to state 40
    exp_pre     go to state 41
    exp_pow     go to state 42
    exp_mul     go to state 43
    exp_add     go to state 44
    exp_sh      go to state 45
    exp_cmp     go to state 46
    exp_eq      go to state 47
    exp_bitand  go to state 48
    exp_bitor   go to state 49
    exp_logand  go to state 50
    exp_logor   go to state 51
    exp_cond    go to state 134
    name        go to state 62


State 131

   26 atom_map: map '[' index ',' index . ']'
   27         | map '[' index ',' index . ',' index ']'

    ','  shift, and go to state 135
    ']'  shift, and go to state 136


State 132

   30 atom_map: mapmod map '[' index ',' . index ']'
   31         | mapmod map '[' index ',' . index ',' index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 137


State 133

   29 atom_map: mapmod map '[' index ']' .

    $default  reduce using rule 29 (atom_map)


State 134

   78 exp_cond: exp_logor '?' exp_cond ':' exp_cond .

    $default  reduce using rule 78 (exp_cond)


State 135

   27 atom_map: map '[' index ',' index ',' . index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 138


State 136

   26 atom_map: map '[' index ',' index ']' .

    $default  reduce using rule 26 (atom_map)


State 137

   30 atom_map: mapmod map '[' index ',' index . ']'
   31         | mapmod map '[' index ',' index . ',' index ']'

    ','  shift, and go to state 139
    ']'  shift, and go to state 140


State 138

   27 atom_map: map '[' index ',' index ',' index . ']'

    ']'  shift, and go to state 141


State 139

   31 atom_map: mapmod map '[' index ',' index ',' . index ']'

    INTEGER  shift, and go to state 96
    '-'      shift, and go to state 97

    index  go to state 142


State 140

   30 atom_map: mapmod map '[' index ',' index ']' .

    $default  reduce using rule 30 (atom_map)


State 141

   27 atom_map: map '[' index ',' index ',' index ']' .

    $default  reduce using rule 27 (atom_map)


State 142

   31 atom_map: mapmod map '[' index ',' index ',' index . ']'

    ']'  shift, and go to state 143


State 143

   31 atom_map: mapmod map '[' index ',' index ',' index ']' .

    $default  reduce using rule 31 (atom_map)
